using System;
using System.Collections.Generic;

namespace Agility.DomainModel
{
    public class User
    {
        private string _name;
        private string _surname;
        private string _email;
        private string _password;

        /// <summary>
        /// Represents unique autogenerated user id.
        /// </summary>
        public virtual long UserId { get; set; }

        /// <summary>
        /// Represents users first name.
        /// </summary>
        public virtual string Name
        {
            get { return _name; }
            set { _name = value; }
        }

        /// <summary>
        /// Represents users last name.
        /// </summary>
        public virtual string Surname
        { 
            get { return _surname; }
            set { _surname = value; }
        }

        /// <summary>
        /// Represents users email address. Must be unique.
        /// </summary>
        public virtual string Email 
        {
            get { return _email; }
            set { _email = value; }
        }

        /// <summary>
        /// Represents users password. Must be at least 6 characters long.
        /// </summary>
        public virtual string Password 
        {
            get { return _password; }
            set { _password = value; }
        }

        /// <summary>
        /// Represents list of projects user is part of.
        /// </summary>
        public virtual IList<Project> UserProjects { get; set; }

        /// <summary>
        /// Represents list of Sprint tasks user is working on.
        /// </summary>
        public virtual IList<Task> UserTasks { get; set; } 

        public User() { }

        public User(string name, string surname, string email, string password)
        {
            Name = name;
            Surname = surname;
            Email = email;
            Password = password;
        }

        /// <summary>
        /// Represents a single string consisting of users name and surname.
        /// </summary>
        public virtual string FullName
        {
            get
            {
                return $"{Name} {Surname}";
            }
        }

        /// <summary>
        /// Users are equal if they have the same user id.
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        public override bool Equals(object obj)
        {
            if(obj == null)
            {
                return false;
            }
            if(obj.GetType() != this.GetType())
            {
                return false;
            }
            User second = (User)obj;
            if(this.UserId == second.UserId)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        public override int GetHashCode()
        {
            return 2139390487 + UserId.GetHashCode();
        }
    }
}
